@model Apps.Models.Act

@{
    ViewData["Title"] = "Details";
}


<div class="bg-light p-4 shadow rounded" style="min-height: 100vh;">
    <h1>Szczegóły aktu: @Model.Title</h1>
    @if (User.Identity.IsAuthenticated)
    {
        @if (User.HasClaim("Admin", "true"))
        {
            <div class="row justify-content-end">
                <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> 
                <p class="mx-2">|</p>
                <a asp-action="Index">Back to List</a>
            </div>
        }
    }
    <div>
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Title)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Title)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Overview)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Overview)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Points)
            </dt>
            <dd class="col-sm-10">
                @if (null != Model.ActVotes)
                {

                    <div class="col-sm font-weight-bold">@Model.ActVotes.Sum(i => i.Vote)</div>
                }
                else
                {
                    <div class="col-sm font-weight-bold">0</div>
                }
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Url)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Url)
            </dd>
        </dl>
    </div>

    <h5>Komentarze</h5>
    <div class="card shadow-0 border">
        <div class="card-body">
            @if (null != ViewBag.Comments)
            {
                @foreach (Comment comment in ViewBag.Comments)
                {
                    <div class="card my-2">
                        <div class="card-body">
                            <p class="text-capitalize">@comment.Text</p>
                        </div>
                        <div class="d-flex justify-content-between m-2">
                            <div class="d-flex flex-row align-items-center">
                                <p class="font-weight-bold text-capitalize text-muted mb-0">@comment.ApplicationUser.FirstName @comment.ApplicationUser.MiddleName</p>
                            </div>
                            <div class="d-flex flex-row align-items-center">
                                <p class="font-weight-bold text-muted mb-0">+</p>
                                @if (null != comment.CommentVotes)
                                {
                                    <p class="font-weight-bold text-muted mb-0 mx-1">@comment.CommentVotes.Sum(i => i.Vote)</p>
                                }
                                else
                                {
                                    <p class="font-weight-bold text-muted mb-0 mx-1">0</p>
                                }
                                <p class="font-weight-bold text-muted mb-0">-</p>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>

    <div>
        <button data-event="LoadComments">Załaduj więcej komentarzy</button>
    </div>

    <form asp-action="Details">
        <div class="bg-light p-2">
            <div class="d-flex flex-row align-items-start">
                <input name="ActId" type="hidden" value="@Model.Id" />
                <textarea name="Comment" class="form-control ml-1 shadow-none textarea"></textarea>
            </div>
            <div class="mt-2 text-right">
                <button class="btn btn-primary btn-sm shadow-none" type="submit">Skomentuj</button>
            </div>
        </div>
    </form>
</div>


@section Scripts {
    <script>
        $(document).ready(() => {
            $('[data-id]').click((e) => {
                var id = $(e.currentTarget).data('id');
                var vote = $(e.currentTarget).data('vote');
                $.ajax({
                    type: "GET",
                    url: "/api/ApiComments/" + vote + "." + id,
                    dataType: "json",
                    success: function (result) {
                        console.log(result);
                    },
                    error: function (result) {
                        console.log(result);
                    }
                });
            });
        });
    </script>

    <script>
        $(document).ready(() => {
            $('[data-event]').click((e) => {
                var dataList = $('[data-id]').map(function () {
                    return $(this).data("id");
                }).get();
                var ids = dataList.filter((v, i, a) => a.indexOf(v) === i);
                var idsString = ids.join(".");
                $.ajax({
                    type: "GET",
                    url: "/api/ApiComments/comments/" + idsString,
                    dataType: "json",
                    success: function (result) {
                        console.log(result);
                    },
                    error: function (result) {
                        console.log(result);
                    }
                });
            });
        });
    </script>
}
